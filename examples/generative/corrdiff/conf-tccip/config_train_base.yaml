# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


## Hyperparameters
batch_size_global: 256
  # Total batch size
cbase: null  # TODO check
  # Channel multiplier
cres: 1  # TODO check
  # Channels per resolution
# ema: 0.5
  # EMA half-life
dropout: 0.13
  # Dropout probability
augment: 0.0
  # Augment probability
hr_mean_conditioning: False
  # High-res mean (regression's output) as additional condition
gridtype: "sinusoidal"
  # can be either linear, sinusoidal, or learnable
N_grid_channels: 4
grad_clip_threshold: false
  # no gradient clipping for defualt non-patch-based training
lr_decay: 1

## Performance options
fp_optimizations: amp-bf16
  # Floating point mode, one of ["fp32", "fp16", "amp-fp16", "amp-bf16"]
  # "amp-{fp16,bf16}" activates Automatic Mixed Precision (AMP) with {float16,bfloat16}
ls: 1
  # Loss scaling
bench: true
  # Enable cuDNN benchmarking
workers: 4
  # DataLoader worker processes
songunet_checkpoint_level: 0 # 0 means no checkpointing
  # Gradient checkpointing level, value is number of layers to checkpoint


## I/O-related options
checkpoint_dir: checkpoints
  # Where to save the checkpoints
tick: 1
  # How often to print progress
dump: 50
  # How often to dump state
seed: null  # TODO check
  # Random seed
transfer: null  # TODO check
  # Transfer learning from network pickle
dry-run: false
  # Print training options and exit
validation_dump: 25
  # how often to record the validation loss
validation_steps: 10
  # how many loss evaluations are used to compute the validation loss per checkpoint
wandb_mode: online
  # Weights & biases mode [online, ofline, disabled]
wandb_project: "nchc"
 # Weights & biases project
wandb_entity: "nvidia-migration"
 # Weights & biases entity (i.e. a workspace, personal or a team workspace)


## Weather data options
dataset:
  type: TCCIP
  train_test_split: true
  data_path: /ws_src/TCCIPERA5_2013_2022/combined_TCCIPERA5_2013_2022.zarr
  n_history: 0
  in_channels: [0, 1, 2, 3, 4, 8, 12, 16] #t2m, tcwv, u10, v10 ,t(500),u(500),v(500),z(500)
  out_channels: [0, 1, 2, 3]
  img_shape_x: 384
  img_shape_y: 384
  roll: false
  add_grid: true
  ds_factor: 4
  min_path: null
  max_path: null
  global_means_path: null
  global_stds_path: null
  normalization: "v1"

# Validation dataset options
# (need to set dataset.train_test_split == true to have an effect)
validation_dataset:
  train: false
  all_times: false
